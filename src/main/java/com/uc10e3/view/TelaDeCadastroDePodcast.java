/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.uc10e3.view;

import com.uc10e3.dao.PodcastDAO;
import com.uc10e3.model.Podcast;
import com.uc10e3.model.Usuario;
import javax.swing.JOptionPane;

/**
 * Interface gráfica para cadastro de podcasts na aplicação CENAFLIX.
 * Permite o cadastro de novos podcasts com informações como produtor, nome do episódio,
 * número do episódio, duração e URL do repositório. A interface também oferece a funcionalidade
 * de acessar a listagem de podcasts cadastrados.
 * 
 * @author Wesll
 * @version 1.2
 * @since 2023-10-01
 */
public class TelaDeCadastroDePodcast extends javax.swing.JFrame {
    /** DAO para operações com podcasts. */
    private PodcastDAO podcastDAO = new PodcastDAO();
    private Usuario usuarioLogado;
    /**
     * Construtor padrão (usuário não logado).
     */
    public TelaDeCadastroDePodcast() {
        initComponents();
    }
    
    /**
     * Construtor para usuários logados.
     * @param usuario Usuário autenticado no sistema.
     */
    public TelaDeCadastroDePodcast(Usuario usuario) {
           initComponents();
           this.usuarioLogado = usuario;

           // Configura a visibilidade do botão de cadastro com base no tipo de usuário
           if (usuario.getTipo().equals("Usuário")) {
               btnCadastrarPodcast.setEnabled(false);
           } else {
               btnCadastrarPodcast.setEnabled(true);
           }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnCadastrarPodcast = new javax.swing.JButton();
        btnVerListagem = new javax.swing.JButton();
        txtProdutor = new javax.swing.JTextField();
        txtNomeDoEpisodio = new javax.swing.JTextField();
        txtNumeroDoEpisodio = new javax.swing.JTextField();
        txtDuracao = new javax.swing.JTextField();
        txtUrlDoRepositorio = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        jLabel1.setText("CENAFLIX");

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        jLabel2.setText("CADASTRAR PODCAST");

        jLabel3.setText("Produtor:");

        jLabel4.setText("Nome do Episódio:");

        jLabel5.setText("N do Episódio:");

        jLabel6.setText("Duração:");

        jLabel7.setText("URL do repositório:");

        btnCadastrarPodcast.setBackground(new java.awt.Color(153, 255, 153));
        btnCadastrarPodcast.setText("Cadastrar");
        btnCadastrarPodcast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarPodcastActionPerformed(evt);
            }
        });

        btnVerListagem.setBackground(new java.awt.Color(153, 255, 255));
        btnVerListagem.setText("Ver Listagem");
        btnVerListagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerListagemActionPerformed(evt);
            }
        });

        txtProdutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProdutorActionPerformed(evt);
            }
        });

        txtUrlDoRepositorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUrlDoRepositorioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addComponent(jLabel2)
                        .addGap(0, 63, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDuracao, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtUrlDoRepositorio)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(45, 45, 45)
                                .addComponent(txtNumeroDoEpisodio))
                            .addComponent(txtNomeDoEpisodio)
                            .addComponent(txtProdutor)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnCadastrarPodcast, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnVerListagem)))))
                .addGap(91, 91, 91))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(193, 193, 193)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(36, 36, 36)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(txtProdutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(txtNomeDoEpisodio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtNumeroDoEpisodio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDuracao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(txtUrlDoRepositorio, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCadastrarPodcast, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVerListagem, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtUrlDoRepositorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUrlDoRepositorioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUrlDoRepositorioActionPerformed

    private void txtProdutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProdutorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProdutorActionPerformed
     /**
     * Valida e persiste os dados do podcast no banco de dados.
     * Realiza validações de campos obrigatórios e formatação numérica antes de salvar.
     * 
     * @param evt Evento de clique no botão "Cadastrar".
     */
    private void btnCadastrarPodcastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarPodcastActionPerformed
            try {
        // Validações
        if (txtProdutor.getText().isEmpty() || txtNomeDoEpisodio.getText().isEmpty() ||
            txtNumeroDoEpisodio.getText().isEmpty() || txtDuracao.getText().isEmpty() ||
            txtUrlDoRepositorio.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Todos os campos são obrigatórios!", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int numeroEpisodio;
        try {
            numeroEpisodio = Integer.parseInt(txtNumeroDoEpisodio.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Número do episódio deve ser um valor inteiro!", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Cria o objeto Podcast
        Podcast podcast = new Podcast(
            txtProdutor.getText(),
            txtNomeDoEpisodio.getText(),
            numeroEpisodio,
            txtDuracao.getText(),
            txtUrlDoRepositorio.getText()
        );

        // Salva o podcast
        podcastDAO.salvar(podcast);
        JOptionPane.showMessageDialog(this, "Podcast cadastrado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);

        // Limpa os campos após o cadastro
        txtProdutor.setText("");
        txtNomeDoEpisodio.setText("");
        txtNumeroDoEpisodio.setText("");
        txtDuracao.setText("");
        txtUrlDoRepositorio.setText("");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao cadastrar podcast: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCadastrarPodcastActionPerformed
 /**
     * Navega para a tela de listagem de podcasts.
     * Fecha a tela atual e abre a interface de listagem.
     * 
     * @param evt Evento de clique no botão "Ver Listagem".
     */
    private void btnVerListagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerListagemActionPerformed
        TelaListagem telaListagem = new TelaListagem(usuarioLogado);
        telaListagem.setVisible(true);
        this.dispose(); 
    }//GEN-LAST:event_btnVerListagemActionPerformed
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCadastrarPodcast;
    private javax.swing.JButton btnVerListagem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtDuracao;
    private javax.swing.JTextField txtNomeDoEpisodio;
    private javax.swing.JTextField txtNumeroDoEpisodio;
    private javax.swing.JTextField txtProdutor;
    private javax.swing.JTextField txtUrlDoRepositorio;
    // End of variables declaration//GEN-END:variables

}